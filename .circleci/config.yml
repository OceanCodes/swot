version: 2.1

orbs:
  slack: circleci/slack@4.4

workflows:
   build:
     jobs:
       - build:
           context:
            - aws-creds
            - circleci-creds
            - slack-creds

jobs:
  build:
    docker:
      - image: codeocean/build-golang:1.16
      - image: couchdb:1.6.1
      - image: opensearchproject/opensearch:1.1.0
        environment:
            plugins.security.disabled: true
            discovery.type: "single-node"
      - image: redis:5.0.6

    working_directory: /go/src/github.com/OceanCodes/swot

    environment:
      TEST_RESULTS: /tmp/test-results

    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.11
      - run: mkdir -p $TEST_RESULTS

      - run:
          name: Shorten commit sha1
          command: |
            echo 'export SHA_SHORT=$(echo ${CIRCLE_SHA1} | cut -c1-7)' >> $BASH_ENV

      - restore_cache:
          keys:
            - go-mod-v1-{{ checksum "go.sum" }}

      - run:
          name: Lint
          command: golangci-lint run --modules-download-mode=readonly

      - run:
          name: Build service
          command: make service

      - run:
          name: Build client
          command: make client

      - run:
          name: Run unit tests
          command: |
            trap "go-junit-report <${TEST_RESULTS}/go-test.out > ${TEST_RESULTS}/go-test-report.xml" EXIT
            go test -v -coverprofile=${TEST_RESULTS}/cover.out ./... | tee ${TEST_RESULTS}/go-test.out
            go tool cover -html=${TEST_RESULTS}/cover.out -o=${TEST_RESULTS}/coverage.html

      - store_artifacts:
          path: /tmp/test-results
          destination: raw-test-output

      - store_test_results:
          path: /tmp/test-results

      - save_cache:
          key: go-mod-v1-{{ checksum "go.sum" }}
          paths:
            - "/go/pkg/mod"

      - run:
          name: Create Docker image
          command: make image

      - deploy:
          name: Trigger sanity checks
          command: |
            if [ "${CIRCLE_BRANCH}" == "master" ] || [ "${CIRCLE_BRANCH}" == "main" ]; then
                ./trigger_sanity.sh
            fi

      - slack/notify:
          event: fail
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":x: Failed: ${CIRCLE_USERNAME}'s workflow (<${CIRCLE_BUILD_URL}|${CIRCLE_JOB}>) in <https://github.com/OceanCodes/${CIRCLE_PROJECT_REPONAME}|OceanCodes/${CIRCLE_PROJECT_REPONAME}> (<https://app.circleci.com/pipelines/github/OceanCodes/${CIRCLE_PROJECT_REPONAME}?branch=${CIRCLE_BRANCH}|${CIRCLE_BRANCH}>)\n- Commit <https://github.com/OceanCodes/${CIRCLE_PROJECT_REPONAME}/commit/${CIRCLE_SHA1}|${SHA_SHORT}>"
                  }
                }
              ]
            }

      - slack/notify:
          event: pass
          custom: |
            {
              "blocks": [
                {
                  "type": "section",
                  "text": {
                    "type": "mrkdwn",
                    "text": ":white_check_mark: Success: ${CIRCLE_USERNAME}'s workflow (<${CIRCLE_BUILD_URL}|${CIRCLE_JOB}>) in <https://github.com/OceanCodes/${CIRCLE_PROJECT_REPONAME}|OceanCodes/${CIRCLE_PROJECT_REPONAME}> (<https://app.circleci.com/pipelines/github/OceanCodes/${CIRCLE_PROJECT_REPONAME}?branch=${CIRCLE_BRANCH}|${CIRCLE_BRANCH}>)\n- Commit <https://github.com/OceanCodes/${CIRCLE_PROJECT_REPONAME}/commit/${CIRCLE_SHA1}|${SHA_SHORT}>"
                  }
                }
              ]
            }
